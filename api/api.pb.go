// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	KeyExchange
	Message
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageID int32

const (
	MessageID_ECDH     MessageID = 0
	MessageID_Nmap     MessageID = 1
	MessageID_Hash     MessageID = 2
	MessageID_Response MessageID = 3
)

var MessageID_name = map[int32]string{
	0: "ECDH",
	1: "Nmap",
	2: "Hash",
	3: "Response",
}
var MessageID_value = map[string]int32{
	"ECDH":     0,
	"Nmap":     1,
	"Hash":     2,
	"Response": 3,
}

func (x MessageID) String() string {
	return proto.EnumName(MessageID_name, int32(x))
}
func (MessageID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type KeyExchange struct {
	ID          MessageID `protobuf:"varint,1,opt,name=ID,json=iD,enum=api.MessageID" json:"ID,omitempty"`
	IdentityKey []byte    `protobuf:"bytes,2,opt,name=IdentityKey,json=identityKey,proto3" json:"IdentityKey,omitempty"`
	Key         []byte    `protobuf:"bytes,3,opt,name=Key,json=key,proto3" json:"Key,omitempty"`
	Signature   []byte    `protobuf:"bytes,4,opt,name=Signature,json=signature,proto3" json:"Signature,omitempty"`
}

func (m *KeyExchange) Reset()                    { *m = KeyExchange{} }
func (m *KeyExchange) String() string            { return proto.CompactTextString(m) }
func (*KeyExchange) ProtoMessage()               {}
func (*KeyExchange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *KeyExchange) GetID() MessageID {
	if m != nil {
		return m.ID
	}
	return MessageID_ECDH
}

func (m *KeyExchange) GetIdentityKey() []byte {
	if m != nil {
		return m.IdentityKey
	}
	return nil
}

func (m *KeyExchange) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyExchange) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Message struct {
	ID        MessageID `protobuf:"varint,1,opt,name=ID,json=iD,enum=api.MessageID" json:"ID,omitempty"`
	NextKey   []byte    `protobuf:"bytes,2,opt,name=NextKey,json=nextKey,proto3" json:"NextKey,omitempty"`
	IO        []byte    `protobuf:"bytes,3,opt,name=IO,json=iO,proto3" json:"IO,omitempty"`
	Signature []byte    `protobuf:"bytes,4,opt,name=Signature,json=signature,proto3" json:"Signature,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Message) GetID() MessageID {
	if m != nil {
		return m.ID
	}
	return MessageID_ECDH
}

func (m *Message) GetNextKey() []byte {
	if m != nil {
		return m.NextKey
	}
	return nil
}

func (m *Message) GetIO() []byte {
	if m != nil {
		return m.IO
	}
	return nil
}

func (m *Message) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*KeyExchange)(nil), "api.KeyExchange")
	proto.RegisterType((*Message)(nil), "api.Message")
	proto.RegisterEnum("api.MessageID", MessageID_name, MessageID_value)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xdd, 0xa4, 0xb8, 0xdd, 0xd9, 0xb2, 0x84, 0x39, 0xed, 0x41, 0x64, 0xe9, 0xa9, 0x78,
	0xe8, 0x41, 0x0f, 0x3e, 0x80, 0x29, 0x34, 0x14, 0x5b, 0x58, 0x9f, 0x20, 0xea, 0xb0, 0x0d, 0x62,
	0x36, 0x36, 0x11, 0x9a, 0x93, 0xaf, 0x2e, 0x59, 0xab, 0x7b, 0xb3, 0xb7, 0x7f, 0xbe, 0x7f, 0x98,
	0x0f, 0x06, 0x0a, 0xed, 0xcc, 0xd2, 0x1d, 0xfa, 0xd0, 0x23, 0xd7, 0xce, 0xcc, 0xbf, 0xa0, 0xdc,
	0x50, 0x5c, 0x1d, 0x5f, 0xf6, 0xda, 0x76, 0x84, 0xd7, 0xc0, 0x94, 0xac, 0xb3, 0x26, 0x5b, 0x54,
	0xb7, 0xd5, 0x32, 0xed, 0x3e, 0x92, 0xf7, 0xba, 0x23, 0x25, 0x5b, 0x66, 0x24, 0x36, 0x50, 0xaa,
	0x57, 0xb2, 0xc1, 0x84, 0xb8, 0xa1, 0x58, 0xb3, 0x26, 0x5b, 0xcc, 0xda, 0xd2, 0x8c, 0x08, 0x05,
	0xf0, 0xd4, 0xf0, 0xa1, 0xe1, 0x6f, 0x14, 0xf1, 0x0a, 0x8a, 0x27, 0xd3, 0x59, 0x1d, 0x3e, 0x0f,
	0x54, 0x4f, 0x06, 0x5e, 0xf8, 0x5f, 0x30, 0xff, 0x80, 0xfc, 0xa4, 0x38, 0x2b, 0xaf, 0x21, 0xdf,
	0xd2, 0x31, 0x8c, 0xe2, 0xdc, 0xfe, 0x8c, 0x58, 0x01, 0x53, 0xbb, 0x93, 0x93, 0x99, 0xdd, 0xff,
	0xca, 0x9b, 0x7b, 0x28, 0xfe, 0x0e, 0xe3, 0x14, 0x26, 0xab, 0x07, 0xb9, 0x16, 0x17, 0x29, 0x6d,
	0xdf, 0xb5, 0x13, 0x59, 0x4a, 0x6b, 0xed, 0xf7, 0x82, 0xe1, 0x0c, 0xa6, 0x2d, 0x79, 0xd7, 0x5b,
	0x4f, 0x82, 0x3f, 0x5f, 0x0e, 0x8f, 0xbb, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x1e, 0x59,
	0x2a, 0x45, 0x01, 0x00, 0x00,
}
