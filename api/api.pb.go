// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Chat
	KeyExchange
	Message
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageID int32

const (
	MessageID_Done     MessageID = 0
	MessageID_Response MessageID = 1
	MessageID_ECDH     MessageID = 2
	MessageID_Nmap     MessageID = 3
	MessageID_Hash     MessageID = 4
	MessageID_Beacon   MessageID = 5
)

var MessageID_name = map[int32]string{
	0: "Done",
	1: "Response",
	2: "ECDH",
	3: "Nmap",
	4: "Hash",
	5: "Beacon",
}
var MessageID_value = map[string]int32{
	"Done":     0,
	"Response": 1,
	"ECDH":     2,
	"Nmap":     3,
	"Hash":     4,
	"Beacon":   5,
}

func (x MessageID) String() string {
	return proto.EnumName(MessageID_name, int32(x))
}
func (MessageID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ChatType int32

const (
	ChatType_Team   ChatType = 0
	ChatType_Direct ChatType = 1
)

var ChatType_name = map[int32]string{
	0: "Team",
	1: "Direct",
}
var ChatType_value = map[string]int32{
	"Team":   0,
	"Direct": 1,
}

func (x ChatType) String() string {
	return proto.EnumName(ChatType_name, int32(x))
}
func (ChatType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Chat struct {
	Team    string `protobuf:"bytes,1,opt,name=Team,json=team" json:"Team,omitempty"`
	Channel string `protobuf:"bytes,2,opt,name=Channel,json=channel" json:"Channel,omitempty"`
}

func (m *Chat) Reset()                    { *m = Chat{} }
func (m *Chat) String() string            { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()               {}
func (*Chat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Chat) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *Chat) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type KeyExchange struct {
	ID            MessageID `protobuf:"varint,1,opt,name=ID,json=iD,enum=api.MessageID" json:"ID,omitempty"`
	IdentityKey   []byte    `protobuf:"bytes,2,opt,name=IdentityKey,json=identityKey,proto3" json:"IdentityKey,omitempty"`
	Key           []byte    `protobuf:"bytes,3,opt,name=Key,json=key,proto3" json:"Key,omitempty"`
	RandomPadding []byte    `protobuf:"bytes,4,opt,name=RandomPadding,json=randomPadding,proto3" json:"RandomPadding,omitempty"`
}

func (m *KeyExchange) Reset()                    { *m = KeyExchange{} }
func (m *KeyExchange) String() string            { return proto.CompactTextString(m) }
func (*KeyExchange) ProtoMessage()               {}
func (*KeyExchange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *KeyExchange) GetID() MessageID {
	if m != nil {
		return m.ID
	}
	return MessageID_Done
}

func (m *KeyExchange) GetIdentityKey() []byte {
	if m != nil {
		return m.IdentityKey
	}
	return nil
}

func (m *KeyExchange) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyExchange) GetRandomPadding() []byte {
	if m != nil {
		return m.RandomPadding
	}
	return nil
}

type Message struct {
	ID            MessageID `protobuf:"varint,1,opt,name=ID,json=iD,enum=api.MessageID" json:"ID,omitempty"`
	NextKey       []byte    `protobuf:"bytes,2,opt,name=NextKey,json=nextKey,proto3" json:"NextKey,omitempty"`
	IO            []byte    `protobuf:"bytes,3,opt,name=IO,json=iO,proto3" json:"IO,omitempty"`
	Chat          *Chat     `protobuf:"bytes,4,opt,name=Chat,json=chat" json:"Chat,omitempty"`
	ChatType      ChatType  `protobuf:"varint,5,opt,name=ChatType,json=chatType,enum=api.ChatType" json:"ChatType,omitempty"`
	RandomPadding []byte    `protobuf:"bytes,6,opt,name=RandomPadding,json=randomPadding,proto3" json:"RandomPadding,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Message) GetID() MessageID {
	if m != nil {
		return m.ID
	}
	return MessageID_Done
}

func (m *Message) GetNextKey() []byte {
	if m != nil {
		return m.NextKey
	}
	return nil
}

func (m *Message) GetIO() []byte {
	if m != nil {
		return m.IO
	}
	return nil
}

func (m *Message) GetChat() *Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *Message) GetChatType() ChatType {
	if m != nil {
		return m.ChatType
	}
	return ChatType_Team
}

func (m *Message) GetRandomPadding() []byte {
	if m != nil {
		return m.RandomPadding
	}
	return nil
}

func init() {
	proto.RegisterType((*Chat)(nil), "api.Chat")
	proto.RegisterType((*KeyExchange)(nil), "api.KeyExchange")
	proto.RegisterType((*Message)(nil), "api.Message")
	proto.RegisterEnum("api.MessageID", MessageID_name, MessageID_value)
	proto.RegisterEnum("api.ChatType", ChatType_name, ChatType_value)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x6e, 0xea, 0x40,
	0x0c, 0xc6, 0xc9, 0x1f, 0x48, 0xe2, 0x00, 0x1a, 0xcd, 0x2a, 0x9b, 0xf7, 0x84, 0x50, 0x17, 0x2d,
	0x0b, 0x16, 0xb4, 0x27, 0x28, 0x41, 0x22, 0x42, 0x40, 0x35, 0xe2, 0x02, 0xd3, 0xc4, 0x82, 0x51,
	0x9b, 0x49, 0x44, 0x66, 0x41, 0x4e, 0xd0, 0x83, 0xf5, 0x62, 0x95, 0x07, 0x04, 0x95, 0x5a, 0xa9,
	0x3b, 0xfb, 0x67, 0xc7, 0xdf, 0x67, 0x67, 0x20, 0x92, 0xb5, 0x9a, 0xd6, 0xc7, 0xca, 0x54, 0xdc,
	0x93, 0xb5, 0x1a, 0x3f, 0x81, 0x3f, 0x3f, 0x48, 0xc3, 0x39, 0xf8, 0x3b, 0x94, 0x65, 0xe2, 0x8c,
	0x9c, 0xfb, 0x48, 0xf8, 0x06, 0x65, 0xc9, 0x13, 0x08, 0xe6, 0x07, 0xa9, 0x35, 0xbe, 0x27, 0xae,
	0xc5, 0x41, 0x7e, 0x4e, 0xc7, 0x1f, 0x0e, 0xc4, 0x2b, 0x6c, 0x17, 0x27, 0x02, 0x7b, 0xe4, 0xff,
	0xc1, 0xcd, 0x52, 0xfb, 0xed, 0x70, 0x36, 0x9c, 0x92, 0xc4, 0x1a, 0x9b, 0x46, 0xee, 0x31, 0x4b,
	0x85, 0xab, 0x52, 0x3e, 0x82, 0x38, 0x2b, 0x50, 0x1b, 0x65, 0xda, 0x15, 0xb6, 0x76, 0x5a, 0x5f,
	0xc4, 0xea, 0x86, 0x38, 0x03, 0x8f, 0x2a, 0x9e, 0xad, 0x78, 0x6f, 0xd8, 0xf2, 0x3b, 0x18, 0x08,
	0xa9, 0x8b, 0xaa, 0x7c, 0x91, 0x45, 0xa1, 0xf4, 0x3e, 0xf1, 0x6d, 0x6d, 0x70, 0xfc, 0x0e, 0xc7,
	0x9f, 0x0e, 0x04, 0x17, 0xad, 0x3f, 0x5d, 0x24, 0x10, 0x6c, 0xf0, 0x64, 0x6e, 0x0e, 0x02, 0x7d,
	0x4e, 0xf9, 0x10, 0xdc, 0x6c, 0x7b, 0x11, 0x77, 0xd5, 0x96, 0xff, 0x3b, 0x5f, 0xc5, 0x4a, 0xc6,
	0xb3, 0xc8, 0xce, 0x22, 0x20, 0xfc, 0x9c, 0x8e, 0xf5, 0x00, 0x21, 0x65, 0xbb, 0xb6, 0xc6, 0xa4,
	0x6b, 0xe5, 0x06, 0xd7, 0x16, 0x82, 0x22, 0xcc, 0x2f, 0xd1, 0xcf, 0x2d, 0x7a, 0xbf, 0x6c, 0x31,
	0x59, 0x43, 0x74, 0xb5, 0xca, 0x43, 0xf0, 0xd3, 0x4a, 0x23, 0xeb, 0xf0, 0x3e, 0x84, 0x02, 0x9b,
	0xba, 0xd2, 0x0d, 0x32, 0x87, 0xf8, 0x62, 0x9e, 0x2e, 0x99, 0x4b, 0xd1, 0xa6, 0x94, 0x35, 0xf3,
	0x28, 0x5a, 0xca, 0xe6, 0xc0, 0x7c, 0x0e, 0xd0, 0x7b, 0x46, 0x99, 0x57, 0x9a, 0x75, 0x27, 0xa3,
	0x9b, 0x3f, 0xea, 0xa0, 0x1f, 0xcb, 0x3a, 0xd4, 0x91, 0xaa, 0x23, 0xe6, 0x86, 0x39, 0xaf, 0x3d,
	0xfb, 0x04, 0x1e, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x20, 0xcf, 0xc5, 0x0f, 0x0f, 0x02, 0x00,
	0x00,
}
